{"ast":null,"code":"var _jsxFileName = \"/home/benek/react-native/whenf1/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NextEvent from './components/NextEvent';\nimport NextRace from './components/NextRace';\nimport GrandPrixButton from './components/GrandPrixButton';\nimport HamburgerMenu from './components/HamburgerMenu';\nimport { convertTimeToTimeZone } from './utils/timeZoneUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedTimeZone, setSelectedTimeZone] = useState('UTC');\n\n  // Example data for NextEvent and NextRace\n  const nextEvent = {\n    type: 'Free Practice 1',\n    grandPrix: 'Australian Grand Prix',\n    date: '14 Mar',\n    time: '02:30'\n  };\n  const nextRace = {\n    grandPrix: 'Australian Grand Prix',\n    date: '16 Mar',\n    time: '05:00'\n  };\n\n  // Example timeLeft object (you can replace this with your actual logic)\n  const timeLeft = {\n    days: 2,\n    hours: 5,\n    minutes: 30,\n    seconds: 45\n  };\n  const handleTimeZoneChange = timeZone => {\n    setSelectedTimeZone(timeZone);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(HamburgerMenu, {\n      onTimeZoneChange: handleTimeZoneChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NextEvent, {\n      nextEvent: {\n        ...nextEvent,\n        time: convertTimeToTimeZone(nextEvent.time, selectedTimeZone)\n      },\n      timeLeft: timeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NextRace, {\n      nextRace: {\n        ...nextRace,\n        time: convertTimeToTimeZone(nextRace.time, selectedTimeZone)\n      },\n      timeLeft: timeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GrandPrixButton, {\n      selectedTimeZone: selectedTimeZone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7ZdpGwulctB3mldsFqwAxJbiuIE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NextEvent","NextRace","GrandPrixButton","HamburgerMenu","convertTimeToTimeZone","jsxDEV","_jsxDEV","App","_s","selectedTimeZone","setSelectedTimeZone","nextEvent","type","grandPrix","date","time","nextRace","timeLeft","days","hours","minutes","seconds","handleTimeZoneChange","timeZone","className","children","onTimeZoneChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/benek/react-native/whenf1/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport NextEvent from './components/NextEvent';\nimport NextRace from './components/NextRace';\nimport GrandPrixButton from './components/GrandPrixButton';\nimport HamburgerMenu from './components/HamburgerMenu';\nimport { convertTimeToTimeZone } from './utils/timeZoneUtils';\n\nconst App = () => {\n  const [selectedTimeZone, setSelectedTimeZone] = useState('UTC');\n\n  // Example data for NextEvent and NextRace\n  const nextEvent = {\n    type: 'Free Practice 1',\n    grandPrix: 'Australian Grand Prix',\n    date: '14 Mar',\n    time: '02:30',\n  };\n\n  const nextRace = {\n    grandPrix: 'Australian Grand Prix',\n    date: '16 Mar',\n    time: '05:00',\n  };\n\n  // Example timeLeft object (you can replace this with your actual logic)\n  const timeLeft = {\n    days: 2,\n    hours: 5,\n    minutes: 30,\n    seconds: 45,\n  };\n\n  const handleTimeZoneChange = (timeZone) => {\n    setSelectedTimeZone(timeZone);\n  };\n\n  return (\n    <div className=\"app\">\n      <HamburgerMenu onTimeZoneChange={handleTimeZoneChange} />\n      <NextEvent\n        nextEvent={{\n          ...nextEvent,\n          time: convertTimeToTimeZone(nextEvent.time, selectedTimeZone),\n        }}\n        timeLeft={timeLeft}\n      />\n      <NextRace\n        nextRace={{\n          ...nextRace,\n          time: convertTimeToTimeZone(nextRace.time, selectedTimeZone),\n        }}\n        timeLeft={timeLeft}\n      />\n      <GrandPrixButton selectedTimeZone={selectedTimeZone} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,qBAAqB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACA,MAAMY,SAAS,GAAG;IAChBC,IAAI,EAAE,iBAAiB;IACvBC,SAAS,EAAE,uBAAuB;IAClCC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;EACR,CAAC;EAED,MAAMC,QAAQ,GAAG;IACfH,SAAS,EAAE,uBAAuB;IAClCC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;EACR,CAAC;;EAED;EACA,MAAME,QAAQ,GAAG;IACfC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC;EAED,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK;IACzCb,mBAAmB,CAACa,QAAQ,CAAC;EAC/B,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA,CAACH,aAAa;MAACuB,gBAAgB,EAAEJ;IAAqB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDxB,OAAA,CAACN,SAAS;MACRW,SAAS,EAAE;QACT,GAAGA,SAAS;QACZI,IAAI,EAAEX,qBAAqB,CAACO,SAAS,CAACI,IAAI,EAAEN,gBAAgB;MAC9D,CAAE;MACFQ,QAAQ,EAAEA;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFxB,OAAA,CAACL,QAAQ;MACPe,QAAQ,EAAE;QACR,GAAGA,QAAQ;QACXD,IAAI,EAAEX,qBAAqB,CAACY,QAAQ,CAACD,IAAI,EAAEN,gBAAgB;MAC7D,CAAE;MACFQ,QAAQ,EAAEA;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFxB,OAAA,CAACJ,eAAe;MAACO,gBAAgB,EAAEA;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjDID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAmDT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}