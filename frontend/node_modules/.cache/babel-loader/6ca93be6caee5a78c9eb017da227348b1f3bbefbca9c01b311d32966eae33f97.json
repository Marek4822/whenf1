{"ast":null,"code":"import { fetchWithTimeout, API_BASE_URL } from './apiBase';\nexport const fetchDriverResults = async (grandPrixName, sessionType) => {\n  return fetchWithTimeout(`${API_BASE_URL}/api/sessions/${grandPrixName}?session_type=${sessionType}`);\n};\nexport const fetchGrandsPrix = async () => {\n  try {\n    const response = await fetchWithTimeout(`${API_BASE_URL}/api/grands_prix`);\n    if (!response.GrandsPrix) {\n      throw new Error('Invalid data format from server');\n    }\n    return response;\n  } catch (error) {\n    throw new Error(`Failed to load Grand Prix data: ${error.message}`);\n  }\n};\n\n// Keep existing exports\nexport { fetchWithTimeout, API_BASE_URL };","map":{"version":3,"names":["fetchWithTimeout","API_BASE_URL","fetchDriverResults","grandPrixName","sessionType","fetchGrandsPrix","response","GrandsPrix","Error","error","message"],"sources":["/home/benek/react-native/whenf1_copy3/frontend/src/api.js"],"sourcesContent":["import { fetchWithTimeout, API_BASE_URL } from './apiBase';\n\nexport const fetchDriverResults = async (grandPrixName, sessionType) => {\n  return fetchWithTimeout(\n    `${API_BASE_URL}/api/sessions/${grandPrixName}?session_type=${sessionType}`\n  );\n};\n\nexport const fetchGrandsPrix = async () => {\n  try {\n    const response = await fetchWithTimeout(`${API_BASE_URL}/api/grands_prix`);\n    if (!response.GrandsPrix) {\n      throw new Error('Invalid data format from server');\n    }\n    return response;\n  } catch (error) {\n    throw new Error(`Failed to load Grand Prix data: ${error.message}`);\n  }\n};\n\n// Keep existing exports\nexport { fetchWithTimeout, API_BASE_URL };"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,YAAY,QAAQ,WAAW;AAE1D,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAOC,aAAa,EAAEC,WAAW,KAAK;EACtE,OAAOJ,gBAAgB,CACrB,GAAGC,YAAY,iBAAiBE,aAAa,iBAAiBC,WAAW,EAC3E,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,gBAAgB,CAAC,GAAGC,YAAY,kBAAkB,CAAC;IAC1E,IAAI,CAACK,QAAQ,CAACC,UAAU,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;IACpD;IACA,OAAOF,QAAQ;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAM,IAAID,KAAK,CAAC,mCAAmCC,KAAK,CAACC,OAAO,EAAE,CAAC;EACrE;AACF,CAAC;;AAED;AACA,SAASV,gBAAgB,EAAEC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}