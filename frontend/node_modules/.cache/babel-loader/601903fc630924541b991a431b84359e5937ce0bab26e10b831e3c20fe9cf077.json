{"ast":null,"code":"var _jsxFileName = \"/home/benek/react-native/whenf1_copy3/frontend/src/components/GrandPrixButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GrandPrixDetails from './GrandPrixDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GrandPrixButton = ({\n  isActive,\n  setActive,\n  grandsPrixData\n}) => {\n  _s();\n  const [selectedGrandPrix, setSelectedGrandPrix] = useState(null);\n  const handleMoreDetailsClick = grandPrix => {\n    setSelectedGrandPrix(grandPrix);\n  };\n  const handleGoBack = () => {\n    setSelectedGrandPrix(null);\n  };\n  const handleHideAllDetails = () => {\n    setActive(); // Use the prop to toggle visibility\n    setSelectedGrandPrix(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grand-prix-button\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleHideAllDetails,\n      children: isActive ? 'Hide Grand Prix Details' : 'Show Grand Prix Details'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-container\",\n      children: !selectedGrandPrix ? grandsPrixData.GrandsPrix.length > 0 ? grandsPrixData.GrandsPrix.map((grandPrix, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grand-prix-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: grandPrix.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }, this), grandPrix.events.map((event, eventIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [event.type, \": \", event.date, \" at \", event.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 23\n          }, this)\n        }, eventIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMoreDetailsClick(grandPrix),\n          className: \"more-details-button\",\n          children: \"MORE Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Grand Prix events found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(GrandPrixDetails, {\n        grandPrix: selectedGrandPrix,\n        onGoBack: handleGoBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(GrandPrixButton, \"77caS4qmyKD8Uq4/lGmdwFs2/Jo=\");\n_c = GrandPrixButton;\nexport default GrandPrixButton;\nvar _c;\n$RefreshReg$(_c, \"GrandPrixButton\");","map":{"version":3,"names":["React","useState","GrandPrixDetails","jsxDEV","_jsxDEV","GrandPrixButton","isActive","setActive","grandsPrixData","_s","selectedGrandPrix","setSelectedGrandPrix","handleMoreDetailsClick","grandPrix","handleGoBack","handleHideAllDetails","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","GrandsPrix","length","map","index","name","events","event","eventIndex","type","date","time","onGoBack","_c","$RefreshReg$"],"sources":["/home/benek/react-native/whenf1_copy3/frontend/src/components/GrandPrixButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GrandPrixDetails from './GrandPrixDetails';\n\nconst GrandPrixButton = ({ isActive, setActive, grandsPrixData }) => {\n  const [selectedGrandPrix, setSelectedGrandPrix] = useState(null);\n\n  const handleMoreDetailsClick = (grandPrix) => {\n    setSelectedGrandPrix(grandPrix);\n  };\n\n  const handleGoBack = () => {\n    setSelectedGrandPrix(null);\n  };\n\n  const handleHideAllDetails = () => {\n    setActive(); // Use the prop to toggle visibility\n    setSelectedGrandPrix(null);\n  };\n\n  return (\n    <div className=\"grand-prix-button\">\n      <button onClick={handleHideAllDetails}>\n        {isActive ? 'Hide Grand Prix Details' : 'Show Grand Prix Details'}\n      </button>\n\n      {isActive && (\n        <div className=\"details-container\">\n          {!selectedGrandPrix ? (\n            grandsPrixData.GrandsPrix.length > 0 ? (\n              grandsPrixData.GrandsPrix.map((grandPrix, index) => (\n                <div key={index} className=\"grand-prix-container\">\n                  <h3>{grandPrix.name}</h3>\n                  {grandPrix.events.map((event, eventIndex) => (\n                    <div key={eventIndex} className=\"event-container\">\n                      <p>\n                        {event.type}: {event.date} at {event.time}\n                      </p>\n                    </div>\n                  ))}\n                  <button\n                    onClick={() => handleMoreDetailsClick(grandPrix)}\n                    className=\"more-details-button\"\n                  >\n                    MORE Details\n                  </button>\n                </div>\n              ))\n            ) : (\n              <p>No Grand Prix events found.</p>\n            )\n          ) : (\n            <GrandPrixDetails grandPrix={selectedGrandPrix} onGoBack={handleGoBack} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GrandPrixButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}